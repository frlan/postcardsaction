# Generated by Django 2.2.19 on 2021-03-13 15:26

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import stdimage.models
import tagulous.models.fields
import tagulous.models.models


class Migration(migrations.Migration):

    replaces = [
        ("postcard", "0001_initial"),
        ("postcard", "0002_postcard_postcrossing"),
        ("postcard", "0003_auto_20191221_1916"),
        ("postcard", "0004_auto_20200418_1205"),
        ("postcard", "0005_url_tags"),
        ("postcard", "0006_auto_20200418_1211"),
        ("postcard", "0007_auto_20200418_1258"),
        ("postcard", "0008_auto_20200418_1259"),
        ("postcard", "0009_auto_20200418_1310"),
        ("postcard", "0010_postcard_published"),
        ("postcard", "0011_auto_20200501_0924"),
        ("postcard", "0012_auto_20200502_0913"),
        ("postcard", "0013_auto_20200509_2200"),
        ("postcard", "0014_auto_20200513_1919"),
        ("postcard", "0015_postcard_publishing_date"),
        ("postcard", "0016_auto_20200522_1613"),
        ("postcard", "0017_auto_20200523_1132"),
        ("postcard", "0018_auto_20200529_1856"),
        ("postcard", "0019_auto_20200529_1858"),
        ("postcard", "0020_auto_20200530_0915"),
        ("postcard", "0021_auto_20200530_0916"),
        ("postcard", "0022_series_urls"),
        ("postcard", "0023_auto_20210307_1229"),
        ("postcard", "0024_auto_20210307_1232"),
        ("postcard", "0025_auto_20210307_1246"),
        ("postcard", "0026_auto_20210307_1251"),
        ("postcard", "0027_auto_20210313_1510"),
    ]

    initial = True

    dependencies = [
        ("postcrossing", "0001_initial"),
        ("copyrighter", "0001_initial"),
        ("postcrossing", "0007_auto_20200503_1543"),
    ]

    operations = [
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("slug", models.SlugField()),
                (
                    "count",
                    models.IntegerField(
                        default=0,
                        help_text="Internal counter of how many times this tag is in use",
                    ),
                ),
                (
                    "protected",
                    models.BooleanField(
                        default=False,
                        help_text="Will not be deleted when the count reaches 0",
                    ),
                ),
                ("path", models.TextField()),
                (
                    "label",
                    models.CharField(
                        help_text="The name of the tag, without ancestors",
                        max_length=255,
                    ),
                ),
                (
                    "level",
                    models.IntegerField(
                        default=1, help_text="The level of the tag in the tree"
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="postcard.Tag",
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
                "unique_together": {("slug", "parent")},
            },
            bases=(tagulous.models.models.BaseTagTreeModel, models.Model),
        ),
        migrations.CreateModel(
            name="URLTag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("slug", models.SlugField()),
                (
                    "count",
                    models.IntegerField(
                        default=0,
                        help_text="Internal counter of how many times this tag is in use",
                    ),
                ),
                (
                    "protected",
                    models.BooleanField(
                        default=False,
                        help_text="Will not be deleted when the count reaches 0",
                    ),
                ),
                ("path", models.TextField()),
                (
                    "label",
                    models.CharField(
                        help_text="The name of the tag, without ancestors",
                        max_length=255,
                    ),
                ),
                (
                    "level",
                    models.IntegerField(
                        default=1, help_text="The level of the tag in the tree"
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="postcard.URLTag",
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
                "unique_together": {("slug", "parent")},
            },
            bases=(tagulous.models.models.BaseTagTreeModel, models.Model),
        ),
        migrations.CreateModel(
            name="URL",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="A short description/title of the URL", max_length=100
                    ),
                ),
                ("url", models.URLField(max_length=250)),
                (
                    "tags",
                    tagulous.models.fields.TagField(
                        _set_tag_meta=True,
                        force_lowercase=False,
                        help_text="Enter a comma-separated tag string",
                        to="postcard.URLTag",
                        tree=True,
                    ),
                ),
            ],
            options={
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="Postcard",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description_short",
                    models.CharField(
                        default="",
                        help_text="Short description of the card may be used as a teaser",
                        max_length=100,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        default="",
                        help_text="Actual description for a postcard:\n            * some story behind\n            * where came it from\n            * what to see",
                    ),
                ),
                (
                    "image",
                    stdimage.models.StdImageField(
                        blank=True, upload_to="img/postcardimages"
                    ),
                ),
                (
                    "photo_copyright",
                    models.ManyToManyField(
                        related_name="photo", to="copyrighter.Copyright"
                    ),
                ),
                (
                    "print_copyright",
                    models.ManyToManyField(
                        related_name="print", to="copyrighter.Copyright"
                    ),
                ),
                (
                    "tags",
                    tagulous.models.fields.TagField(
                        _set_tag_meta=True,
                        force_lowercase=False,
                        help_text="Enter a comma-separated tag string",
                        to="postcard.Tag",
                        tree=True,
                    ),
                ),
                (
                    "urls",
                    models.ManyToManyField(
                        blank=True,
                        related_name="further_information",
                        to="postcard.URL",
                    ),
                ),
                (
                    "published",
                    models.BooleanField(
                        default=False, help_text="Whether this postcard is visible."
                    ),
                ),
                (
                    "creation_timestamp",
                    models.DateTimeField(
                        auto_now_add=True, default=django.utils.timezone.now
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "publishing_date",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
            ],
            options={
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="PostcardItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "swapping",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this postcard is free for private swapping",
                    ),
                ),
                (
                    "year_received",
                    models.DateField(default=datetime.date.today, verbose_name="Date"),
                ),
                (
                    "year_verified",
                    models.BooleanField(
                        default=True,
                        help_text="Whether the year of receiving is verified",
                    ),
                ),
                ("creation_timestamp", models.DateTimeField(auto_now_add=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "postcard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="postcard.Postcard",
                    ),
                ),
                (
                    "postcrossing",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="postcrossing.PCPostCard",
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="Series",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, default="")),
                (
                    "urls",
                    models.ManyToManyField(
                        blank=True, related_name="series_links", to="postcard.URL"
                    ),
                ),
            ],
            options={
                "ordering": ["title"],
                "verbose_name_plural": "Series",
            },
        ),
        migrations.AddField(
            model_name="postcard",
            name="series",
            field=models.ManyToManyField(
                blank=True, related_name="series_member", to="postcard.Series"
            ),
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "iso_code",
                    models.CharField(
                        default="", help_text="ISO of country", max_length=10
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Countries",
                "ordering": ["iso_code"],
            },
        ),
        migrations.AddField(
            model_name="postcard",
            name="country_of_origin",
            field=models.ForeignKey(
                blank=True,
                help_text="Country of origin if known.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="postcard.Country",
            ),
        ),
        migrations.AlterField(
            model_name="postcard",
            name="description",
            field=models.TextField(
                default="",
                help_text="Actual description for a postcard:\n            * some story behind\n            * where came it from\n            * what to see",
            ),
        ),
    ]
